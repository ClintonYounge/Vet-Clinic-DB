-- schema.sql is a file that contains the schema of the database.

/* Database schema to keep the structure of entire database. */

CREATE TABLE animals (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100),
    date_of_birth DATE,
    escape_attempts INTEGER,
    neutered BOOLEAN,
    weight_kg DECIMAL
);

-- Alter animals table to add species column
    ALTER TABLE animals
    ADD COLUMN species text;

-- Update species column to digimon for all animals that have a name ending in mon
    UPDATE animals
    SET species = 'digimon'
    WHERE name LIKE '%mon';

-- Update species to pokemon if not already assigned a species
    UPDATE animals
    SET species = 'pokemon'
    WHERE species IS NULL;


-- owners table
-- Create a table named "owners" to store information about animal owners.
CREATE TABLE owners (
    id SERIAL PRIMARY KEY, -- Create an auto-incremented primary key column "id".
    full_name VARCHAR(100), -- Column to store the full name of the owner.
    age INTEGER -- Column to store the age of the owner.
);

-- species table
-- Create a table named "species" to store information about animal species.
CREATE TABLE species (
    id SERIAL PRIMARY KEY, -- Create an auto-incremented primary key column "id".
    name VARCHAR(100) -- Column to store the name of the species.
);


-- animals table
-- Modify the "animals" table as per the requirements.
ALTER TABLE animals
    ADD COLUMN species_id INTEGER REFERENCES species(id),
    ADD COLUMN owner_id INTEGER REFERENCES owners(id),
    DROP COLUMN species;


-- JOIN TABLES Entries
CREATE TABLE vets (
    id SERIAL PRIMARY KEY,
    name VARCHAR(150),
    age INT,
    date_of_graduation DATE
);

CREATE TABLE specializations(
    specie_id INT REFERENCES species(id),
    vet_id INT REFERENCES vets(id)
);

CREATE TABLE visits(
    id INT GENERATED ALWAYS AS IDENTITY,
    animal_id INT REFERENCES animals(id),
    vet_id INT REFERENCES vets(id),
   date_of_visit DATE,
   PRIMARY KEY(id)
);

CREATE INDEX animal_visits_idx ON visits(animal_id ASC);
CREATE INDEX idx_visits_vet_id_covering ON visits (vet_id) INCLUDE (id, animal_id, visit_date);
CREATE INDEX idx_owners_email ON owners (email);